# -*- coding: utf-8 -*-
"""04 Условный оператор.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XcKyGi3WDImEGQcvuLuWT31A7CJUSrtb

# Операторы if, elif, else

Операторы <code>if</code> в Python позволяют компьютеру выполнять разные действия в зависимости от условий.

Представьте, что мы говорим компьютеру:

"Если случится вот это, то выполни такое-то действие"

Мы также можем развить эту идею с помощью операторов <code>elif</code> и <code>else</code>, которые позволяют нам сказать компьютеру следующее:

"Если выполняется такое-то условие, то выполни такое-то действие. Иначе, если выполняется другое условие, то выполни другое действие. Иначе, если *никакие* из условий выше не выполнены, то выполни третье действие."

Давайте посмотрим на синтаксис оператора <code>if</code>, чтобы увидеть это в действии:

    if условие1:
        выполнить действие1
    elif условие2:
        выполнить действие2
    else:
        выполнить действие3

## Первый пример

Рассмотрим пример:
"""

if True:
    print('It was true!')

"""Добавим else:"""

x = False

if x:
    print('x равен True!')
else:
    print('Это предложение будет напечатано во всех случаях, когда x не равен true')

"""### Несколько условий

Посмотрим более полную картину для операторов <code>if</code>, <code>elif</code>, и <code>else</code>!

Мы напишем это в виде вложенной структуры. Обратите внимание, как в этом коде расположены <code>if</code>, <code>elif</code> и <code>else</code>. Это позволяет увидеть, какой <code>if</code> относится к какому <code>elif</code> или <code>else</code>.

Также мы вспомним синтаксис сравнения значений в Python.
"""

loc = 'Bank'

if loc == 'Auto Shop':
    print('Welcome to the Auto Shop!')
elif loc == 'Bank':
    print('Welcome to the bank!')
else:
    print('Where are you?')

"""Обратите внимание на вложенные операторы <code>if</code> - они проверяются до тех пор, пока не встретится условие, которое принимает значение True. И тогда выполняется код, расположенный после этого условия.  Вы можете поместить сколько угодно операторов <code>elif</code>, прежде чем указать завершающий <code>else</code>.

Рассмотрим еще два простых примера для операторов <code>if</code>, <code>elif</code> и <code>else</code>:
"""

person = 'Sammy'

if person == 'Sammy':
    print('Welcome Sammy!')
else:
    print("Welcome, what's your name?")

person = 'George'

if person == 'Sammy':
    print('Welcome Sammy!')
elif person =='George':
    print('Welcome George!')
else:
    print("Welcome, what's your name?")

"""## Пример 1

Пусть от пользователя требуется ввести два целых числа: температуру на улице вчера и сегодня. А программа ответит — сегодня теплее, холоднее или же температура не изменилась:
```
yesterday_temp = int(input())
today_temp = int(input())
if today_temp > yesterday_temp:
    print("Сегодня теплее, чем вчера.")
elif today_temp < yesterday_temp:
    print("Сегодня холоднее, чем вчера.")
else:
    print("Сегодня такая же температура, как вчера.")
```

Оператор if является началом условной конструкции. Далее идёт условие, которое возвращает логическое значение True (истина) или False (ложь). Завершается условие символом «двоеточие». Затем — обязательный отступ в четыре пробела, он показывает, что строки объединяются в один блок. Отступ аналогичен использованию фигурных скобок или ключевых слов begin и end в других языках программирования.

Тело условной конструкции может содержать одно или несколько выражений (строк). По завершении тела может идти следующее условие, которое начинается с оператора elif (сокращение от else if — «иначе если»). Оно проверяется только в случае, если предыдущее условие не было истинным.

Синтаксис в elif аналогичен if. Операторов elif для одного блока условного оператора может быть несколько, а может не быть совсем. Последним идёт оператор else, который не содержит условия, а выполняется, только если ни одно из предыдущих условий в if и elif не выполнилось. Оператор else не является обязательным.

Ниже выполните данный пример

"""

yesterday_temp = int(input())
today_temp = int(input())
if today_temp > yesterday_temp:
    print("Сегодня теплее, чем вчера.")
elif today_temp < yesterday_temp:
    print("Сегодня холоднее, чем вчера.")
else:
    print("Сегодня такая же температура, как вчера.")

"""## Пример 2

Пользователь должен ввести первую и последнюю буквы русского алфавита. Ввод производится в двух отдельных строках и в любом регистре.

```
print("Введите первую и последнюю буквы русского алфавита.")
first_letter = input()
last_letter = input()
if (first_letter == "а" or first_letter == "А") and (
        last_letter == "я" or last_letter == "Я"):
    print("Верно.")
else:
    print("Неверно.")
```    


Ниже выполните данный пример
"""

print("Введите первую и последнюю буквы русского алфавита.")
first_letter = input()
last_letter = input()
if (first_letter == "а" or first_letter == "А") and (
        last_letter == "я" or last_letter == "Я"):
    print("Верно.")
else:
    print("Неверно.")

"""## Пример 3

Проверим, что во введённой строке встречается корень «добр» (для слов «добрый», «доброе» и подобных):

```
text = input()
if "добр" in text:
    print("Встретилось 'доброе' слово.")
else:
    print("Добрых слов не найдено.")
```

Ниже выполните данный пример
"""

text = input()
if "добр" in text:
    print("Встретилось 'доброе' слово.")
else:
    print("Добрых слов не найдено.")

"""## Задание

Решите приведенные задачи с использованием условного оператора. Числа A,B,C нужно ввести с клавиатуры.

1. Дано целое число A. Проверить истинность высказывания: «Число A является положительным».
2. Дано целое число A. Проверить истинность высказывания: «Число A является нечетным».
3. Дано целое число A. Проверить истинность высказывания: «Число A является четным».
4. Даны два целых числа: A, B. Проверить истинность высказывания: «Справедливы неравенства A > 2 и B ≤ 3».
4. Даны два целых числа: A, B. Проверить истинность высказывания: «Справедливы неравенства A ≥ 0 или B < –2».
4. Даны три целых числа: A, B, C. Проверить истинность высказыва-ния: «Справедливо двойное неравенство A < B < C».
4. Даны три целых числа: A, B, C. Проверить истинность высказыва-ния: «Число B находится между числами A и C».

Пример решения задания 1:

```
A=int(input("A= "))

if A>0:
    print("положительное")
else:
    print("не положительное")
```

"""

A=int(input("A= "))

if A>0:
    print("положительное")
else:
    print("не положительное")

A=int(input("A= "))
B=int(input("B= "))
C=int(input("C= "))
if A>0:
    print("A положительное")
else:
    print("A не положительное")

if A%2 == 0:
    print("A четное")
else:
    print("A нечетное")
print('Справедливы неравенства A ≥ 0:', (A >= 0))
print('Справедливы неравенства B < –2:', (B < -2))
if A>=0 or B<-2:
  print("По крайней мере одно из неравенств A ≥ 0 или B < –2 справедливо")
else:
  print("Оба неравенства A > 0 и B ≤ -2 несправедливы")
print('Справедливо ли двойное неравенство A < B < C:', (A < B < C))
print('Число B находится между числами A и C:', (A < B < C))

